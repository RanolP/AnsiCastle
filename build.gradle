plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
}

apply from: rootProject.file('pom.gradle')

wrapper {
    gradleVersion = '4.8.1'
    distributionType = Wrapper.DistributionType.ALL
}

group 'io.github.ranolp'
version '0.1.0'

description 'Ansi utility which is alternative of fusesource/jansi'

sourceCompatibility = 1.8
targetCompatibility = '1.8'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.3.1'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.1'
}

jar {
    version = ''
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    group = JavaBasePlugin.DOCUMENTATION_GROUP
    description = 'Assembles sources JAR'
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

sourceSets {
    build {
        java.srcDir file('src/main/java')
    }
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}
publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java

            groupId project.group
            artifactId project.name
            version project.version

            artifact sourcesJar
            artifact javadocJar

            withPom(pom)
        }
    }
}

model {
    tasks.generatePomFileForMyPublicationPublication {
        destination = file("${buildDir}/libs/${project.name}-${project.version}.pom")
    }
}

task prepareUpload(type: Copy, dependsOn: ['build', 'generatePomFileForMyPublicationPublication']) {
    from 'build/libs'
    into "build/upload/io/github/ranolp/${project.name}/${project.version}"
    include "AnsiCastle.jar"
    rename "AnsiCastle.jar", "AnsiCastle-${project.version}.jar"
    include "AnsiCastle-${project.version}-sources.jar"
    include "AnsiCastle-${project.version}-javadoc.jar"
    include "AnsiCastle-${project.version}.pom"
}
